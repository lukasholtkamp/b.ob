<?xml version="1.0"?>

<robot>

    <gazebo reference="chassis">
    <material>Gazebo/White</material>
    </gazebo>
    
    <gazebo reference="wheel_mount">
    <material>Gazebo/White</material>
    </gazebo>
    
    <gazebo reference="camera_mount">
        <material>Gazebo/White</material>
    </gazebo>
    
    <gazebo reference="emergency_mount">
        <material>Gazebo/Black</material>
    </gazebo>
    
    <gazebo reference="emergency_button">
        <material>Gazebo/Red</material>
    </gazebo>
    
    <gazebo reference="left_wheel">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Black</material>
    </gazebo>
    
    <gazebo reference="right_wheel">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Black</material>
    </gazebo>
    
    <gazebo reference="caster_wheel">
    <mu1>0.001</mu1>
    <mu2>0.001</mu2>
    <material>Gazebo/Black</material>
    </gazebo>


    <gazebo>
        <plugin name="diff_drive" filename="libgazebo_ros_diff_drive.so">

            <!-- Wheel Information -->
            <left_joint>left_wheel_joint</left_joint>
            <right_joint>right_wheel_joint</right_joint>
            <wheel_separation>${main_body_y_dim+wheel_link_length}</wheel_separation>
            <wheel_diameter>${2*wheel_link_radius}</wheel_diameter>


            <!-- Limits -->
            <max_wheel_torque>20</max_wheel_torque>
            <max_wheel_acceleration>2</max_wheel_acceleration>

            
            <!-- Output -->
            <odometry_frame>odom</odometry_frame>
            <robot_base_frame>base_link</robot_base_frame>

            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>
            <publish_wheel_tf>true</publish_wheel_tf>

            <publishWheelJointState>true</publishWheelJointState>
            <command_topic>cmd_vel</command_topic>
            <odometry_topic>odom</odometry_topic>

        </plugin>
    </gazebo>

    <gazebo reference="lidar_frame">
        <material>Gazebo/Red</material>

        <sensor name="lidar" type="ray">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>false</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <min_angle>-3.14</min_angle>
                        <max_angle>3.14</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.15</min>
                    <max>6.0</max>
                    <!-- <max>12.0</max> -->
                    <resolution>0.01500</resolution>
		        </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <argument>~/out:=scan</argument>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>lidar_frame</frame_name>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="camera_frame">

        <material>Gazebo/Black</material>

        <sensor name="camera" type="camera">
            <pose> camera_radius 0 0 0 0 0 </pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <camera>
                <horizontal_fov>1.089</horizontal_fov>
                <image>
                    <format>R8G8B8</format>
                    <width>640</width>
                    <height>480</height>
                </image>
                <clip>
                    <near>0.05</near>
                    <far>8.0</far>
                </clip>
            </camera>

            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <frame_name>camera_optical_frame</frame_name>
            </plugin>
        </sensor>

    </gazebo>

    <gazebo reference="imu_frame">

        <material>Gazebo/Blue</material>
        <gravity>true</gravity>

        <sensor name="mpu6050_imu" type="imu">
            <pose> 0 0 0 0 0 0 </pose>
            <always_on>1</always_on>
            <visualize>true</visualize>
            <update_rate>100</update_rate>

            <plugin name="imu_controller" filename="libgazebo_ros_imu_sensor.so">
                <topic_name>imu</topic_name>
                <frame_name>imu_frame</frame_name>
                <ros>
                    <remapping>~/out:=imu_broadcaster/imu</remapping>
                </ros>
                <initial_orientation_as_reference>false</initial_orientation_as_reference>
            </plugin>
            <always_on>true</always_on>
            <update_rate>100</update_rate>
            <visualize>true</visualize>
            <imu>
            <angular_velocity>
                <x>
                <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-4</stddev>
                </noise>
                </x>
                <y>
                <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-4</stddev>
                </noise>
                </y>
                <z>
                <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-4</stddev>
                </noise>
                </z>
            </angular_velocity>
            <linear_acceleration>
                <x>
                <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>1.7e-2</stddev>
                </noise>
                </x>
                <y>
                <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>1.7e-2</stddev>
                </noise>
                </y>
                <z>
                <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>1.7e-2</stddev>
                </noise>
                </z>
            </linear_acceleration>
            <orientation>
                <x>
                <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-3</stddev>
                    </noise>
                </x>
                <y>
                    <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-3</stddev>
                    </noise>
                </y>
                <z>
                    <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-3</stddev>
                    </noise>
                </z>
                </orientation>
            </imu>
        </sensor>
    </gazebo>


</robot>