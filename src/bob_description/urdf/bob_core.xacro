<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >

    <!-- Body Dimensions -->
    <xacro:property name="main_body_x_dim" value="0.4"/>
    <xacro:property name="main_body_y_dim" value="0.3"/>
    <xacro:property name="main_body_z_dim" value="0.085"/>

    <!-- Front Wheel Mount Dimensions -->
    <xacro:property name="front_wheel_mount_x_dim" value="0.165"/>
    <xacro:property name="front_wheel_mount_y_dim" value="0.08"/>
    <xacro:property name="front_wheel_mount_z_dim" value="0.07"/>

    <!-- Camera Mount Dimensions -->
    <xacro:property name="camera_mount_x_dim" value="0.04"/>
    <xacro:property name="camera_mount_y_dim" value="0.04"/>
    <xacro:property name="camera_mount_z_dim" value="0.975"/>

    <!-- Emergency Button Dimensions -->
    <xacro:property name="emergency_mount_x_dim" value="0.07"/>
    <xacro:property name="emergency_mount_y_dim" value="0.07"/>
    <xacro:property name="emergency_mount_z_dim" value="0.058"/>

    <xacro:property name="emergency_button_radius" value="0.02"/>
    <xacro:property name="emergency_button_length" value="0.03"/>

    <!-- Rear Wheel Dimensions -->
    <xacro:property name="wheel_link_radius" value="0.08255"/>
    <xacro:property name="wheel_link_length" value="0.068"/>
    <xacro:property name="wheel_link_z_location" value="0"/>

    <!-- Front Wheel Dimensions -->
    <xacro:property name="front_wheel_link_radius" value="${(wheel_link_radius+(main_body_z_dim-front_wheel_mount_z_dim))/2}"/>
    <xacro:property name="front_wheel_link_length" value="0.015"/>
    <xacro:property name="front_wheel_link_x_offset" value="0.075"/>
    <xacro:property name="front_wheel_link_x_location" value="${main_body_x_dim+front_wheel_mount_x_dim-front_wheel_link_x_offset}"/>

    <!-- Material Density -->
    <xacro:property name="body_density" value="2710.0"/>
    <xacro:property name="wheel_density" value="2710.0"/>
    <xacro:property name="front_wheel_density" value="2710.0"/>
    <xacro:property name="emergency_button_density" value="2710.0"/>

    <!-- Pi Constant -->
    <xacro:property name="pi_const" value="3.14159265"/>

    <!-- Masses -->
    <xacro:property name="main_body_mass" value="${body_density*main_body_x_dim*main_body_y_dim*main_body_z_dim*0.41}"/>
    <xacro:property name="wheel_mount_mass" value="${body_density*front_wheel_mount_x_dim*front_wheel_mount_y_dim*front_wheel_mount_z_dim*0.41}"/>
    <xacro:property name="camera_mount_mass" value="${body_density*camera_mount_x_dim*camera_mount_y_dim*camera_mount_z_dim}"/>
    <xacro:property name="emergency_mount_mass" value="${emergency_button_density*emergency_mount_x_dim*emergency_mount_y_dim*emergency_mount_z_dim}"/>
    <xacro:property name="emergency_button_mass" value="${emergency_button_density*pi_const*emergency_button_radius*emergency_button_radius*emergency_button_length}"/>


    <xacro:property name="wheel_mass" value="${wheel_density*pi_const*wheel_link_radius*wheel_link_radius*wheel_link_length}"/>
    <xacro:property name="front_wheel_mass" value="${front_wheel_density*pi_const*front_wheel_link_radius*front_wheel_link_radius*front_wheel_link_length}"/>

    <!-- Moments of Inertia of the Wheels -->
    <xacro:property name="Iz_wheel" value="${0.5*wheel_mass*wheel_link_radius*wheel_link_radius}"/>
    <xacro:property name="I_wheel" value="${(1.0/12.0)*wheel_mass*(3.0*wheel_link_radius*wheel_link_radius+wheel_link_length*wheel_link_length)}"/>

    <xacro:property name="Iz_front_wheel" value="${0.5*front_wheel_mass*front_wheel_link_radius*front_wheel_link_radius}"/>
    <xacro:property name="I_front_wheel" value="${(1.0/12.0)*front_wheel_mass*(3.0*front_wheel_link_radius*front_wheel_link_radius+front_wheel_link_length*front_wheel_link_length)}"/>

    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>

    <material name="white">
        <color rgba="1 1 1 1"/>
    </material>

    <material name="red">
        <color rgba="1 0.2 0.2 1"/>
    </material>

    <material name="blue">
        <color rgba="0.2 0.2 1 1"/>
    </material>

    <xacro:macro name="inertia_wheel">
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <mass value="${wheel_mass}"/>
            <inertia ixx="${I_wheel}" ixy="0.0" ixz="0.0" iyy="${I_wheel}" iyz="0.0" izz="${Iz_wheel}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="inertia_front_wheel">
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <mass value="${front_wheel_mass}"/>
            <inertia ixx="${I_front_wheel}" ixy="0.0" ixz="0.0" iyy="${I_front_wheel}" iyz="0.0" izz="${Iz_front_wheel}" />
        </inertial>
    </xacro:macro>


    <!-- BASE LINK -->

    <link name="base_link">
    </link>

    <joint name="base_footprint_joint" type="fixed">
        <parent link="base_link"/>front_
        <child link="base_footprint"/>front_
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

    <link name="base_footprint">
    </link>

    <!-- CHASSIS LINK -->
    <joint name="chassis_joint" type="fixed">
        <parent link="base_link"/>front_
        <child link="chassis"/>front_
        <origin xyz="${-wheel_link_radius} 0 0"/>
    </joint>
    

    <link name="chassis">

        <visual>
            <origin xyz="${main_body_x_dim*0.5} 0 ${main_body_z_dim*0.5}"/>
            <geometry>
                <box size="${main_body_x_dim} ${main_body_y_dim} ${main_body_z_dim}"/>
            </geometry>
            <material name="white"/>
        </visual>

        <collision>
            <origin xyz="${main_body_x_dim*0.5} 0 ${main_body_z_dim*0.5}"/>
            <geometry>
                <box size="${main_body_x_dim} ${main_body_y_dim} ${main_body_z_dim}"/>
            </geometry>
        </collision>

        <inertial>
            <origin xyz="${main_body_x_dim*0.5} 0 ${main_body_z_dim*0.5}"/>
            <mass value="${main_body_mass}" />
            <inertia ixx="${(1/12)*main_body_mass*(main_body_y_dim*main_body_y_dim+main_body_z_dim*main_body_z_dim)}" ixy="0.0" ixz="0.0" iyy="${(1/12)*main_body_mass*(main_body_x_dim*main_body_x_dim+main_body_z_dim*main_body_z_dim)}"  iyz="0.0" izz="${(1/12)*main_body_mass*(main_body_y_dim*main_body_y_dim+main_body_x_dim*main_body_x_dim)}"  />
        </inertial>

    </link>

    <gazebo reference="chassis">
    <material>Gazebo/White</material>
    </gazebo>

    <!-- CAMERA MOUNT LINK -->
    <joint name="camera_mount_joint" type="fixed">
        <parent link="chassis"/>front_
        <child link="camera_mount"/>front_
        <origin xyz="${-camera_mount_x_dim*0.5} 0 ${camera_mount_z_dim*0.5}"/>
    </joint> 

    <link name="camera_mount">
        <visual>
            <geometry>
                <box size="${camera_mount_x_dim} ${camera_mount_y_dim} ${camera_mount_z_dim}"/>
            </geometry>
            <material name="white"/>
        </visual>

        <collision>
            <geometry>
                <box size="${camera_mount_x_dim} ${camera_mount_y_dim} ${camera_mount_z_dim}"/>
            </geometry>
        </collision>

        <inertial>
            <mass value="${camera_mount_mass}" /> 
            <inertia ixx="${(1/12)*camera_mount_mass*(camera_mount_y_dim*camera_mount_y_dim+camera_mount_z_dim*camera_mount_z_dim)}" ixy="0.0" ixz="0.0" iyy="${(1/12)*camera_mount_mass*(camera_mount_x_dim*camera_mount_x_dim+camera_mount_z_dim*camera_mount_z_dim)}"  iyz="0.0" izz="${(1/12)*camera_mount_mass*(camera_mount_y_dim*camera_mount_y_dim+camera_mount_x_dim*camera_mount_x_dim)}"  />
        </inertial>

    </link>

    <gazebo reference="camera_mount">
        <material>Gazebo/White</material>
    </gazebo>

    <!-- EMERGENCY MOUNT LINK -->
    <joint name="emergency_mount_joint" type="fixed">
        <parent link="camera_mount"/>front_
        <child link="emergency_mount"/>front_
        <origin xyz="${-emergency_mount_x_dim+(emergency_mount_x_dim-camera_mount_x_dim)*0.5} 0 ${camera_mount_z_dim*0.5-0.02}"/>
    </joint> 

    <link name="emergency_mount">
        <visual>
            <geometry>
                <box size="${emergency_mount_x_dim} ${emergency_mount_y_dim} ${emergency_mount_z_dim}"/>
            </geometry>
            <material name="black"/>
        </visual>

        <collision>
            <geometry>
                <box size="${emergency_mount_x_dim} ${emergency_mount_y_dim} ${emergency_mount_z_dim}"/>
            </geometry>
        </collision>

        <inertial>
            <mass value="${emergency_mount_mass}" /> 
            <inertia ixx="${(1/12)*emergency_mount_mass*(emergency_mount_y_dim*emergency_mount_y_dim+emergency_mount_z_dim*emergency_mount_z_dim)}" ixy="0.0" ixz="0.0" iyy="${(1/12)*emergency_mount_mass*(emergency_mount_x_dim*emergency_mount_x_dim+emergency_mount_z_dim*emergency_mount_z_dim)}"  iyz="0.0" izz="${(1/12)*emergency_mount_mass*(emergency_mount_y_dim*emergency_mount_y_dim+emergency_mount_x_dim*emergency_mount_x_dim)}"  />
        </inertial>

    </link>

    <gazebo reference="emergency_mount">
        <material>Gazebo/Black</material>
    </gazebo>

    <!-- EMERGENCY BUTTON LINK -->
    <joint name="emergency_button_joint" type="fixed">
        <parent link="emergency_mount"/>front_
        <child link="emergency_button"/>front_
        <origin xyz="0 0 ${emergency_mount_z_dim*0.5}" />
    </joint> 

    <link name="emergency_button">
        <visual>
            <geometry>
                <cylinder radius="${emergency_button_radius}" length="${emergency_button_length}"/>
            </geometry>
            <material name="red"/>
        </visual>

        <collision>
            <geometry>
                <cylinder radius="${emergency_button_radius}" length="${emergency_button_length}"/>
            </geometry>
        </collision>
        
        <inertial>
            <mass value="${emergency_button_mass}"/>
            <inertia ixx="${(1.0/12.0)*emergency_button_mass*(3.0*emergency_button_radius*emergency_button_radius+emergency_button_length*emergency_button_length)}" ixy="0.0" ixz="0.0" iyy="${(1.0/12.0)*emergency_button_mass*(3.0*emergency_button_radius*emergency_button_radius+emergency_button_length*emergency_button_length)}" iyz="0.0" izz="${0.5*emergency_button_mass*emergency_button_radius*emergency_button_radius}" />
        </inertial>

    </link>

    <gazebo reference="emergency_button">
        <material>Gazebo/Red</material>
    </gazebo>

    <!-- WHEEL MOUNT LINK -->
    <joint name="wheel_mount_joint" type="fixed">
        <parent link="chassis"/>front_
        <child link="wheel_mount"/>front_
        <origin xyz="0 0 0"/>
    </joint>

    <link name="wheel_mount">

        <visual>
            <origin xyz="${main_body_x_dim+front_wheel_mount_x_dim*0.5} 0 ${main_body_z_dim*0.5+(main_body_z_dim-front_wheel_mount_z_dim)*0.5}"/>
            <geometry>
                <box size="${front_wheel_mount_x_dim} ${front_wheel_mount_y_dim} ${front_wheel_mount_z_dim}"/>
            </geometry>
            <material name="white"/>
        </visual>

        <collision>
            <origin xyz="${main_body_x_dim+front_wheel_mount_x_dim*0.5} 0 ${main_body_z_dim*0.5+(main_body_z_dim-front_wheel_mount_z_dim)*0.5}"/>
            <geometry>
                <box size="${front_wheel_mount_x_dim} ${front_wheel_mount_y_dim} ${front_wheel_mount_z_dim}"/>
            </geometry>
        </collision>

        <inertial>
            <origin xyz="${main_body_x_dim+front_wheel_mount_x_dim*0.5} 0 ${main_body_z_dim*0.5+(main_body_z_dim-front_wheel_mount_z_dim)*0.5}"/>
            <mass value="${wheel_mount_mass}" />
            <inertia ixx="${(1/12)*wheel_mount_mass*(front_wheel_mount_y_dim*front_wheel_mount_y_dim+front_wheel_mount_z_dim*front_wheel_mount_z_dim)}" ixy="0.0" ixz="0.0" iyy="${(1/12)*wheel_mount_mass*(front_wheel_mount_x_dim*front_wheel_mount_x_dim+front_wheel_mount_z_dim*front_wheel_mount_z_dim)}"  iyz="0.0" izz="${(1/12)*wheel_mount_mass*(front_wheel_mount_y_dim*front_wheel_mount_y_dim+front_wheel_mount_x_dim*front_wheel_mount_x_dim)}"  />
        </inertial>

    </link>
    
    <!-- LEFT WHEEL LINK -->

    <joint name="left_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel"/>
        <origin xyz="0 ${main_body_y_dim/2+wheel_link_length/2} ${wheel_link_z_location}" rpy="${-pi_const/2} 0 0" />
        <axis xyz="0 0 1"/>
        <limit effort="1000" velocity="1000" />
        <dynamics damping="1.0" friction="1.0"/>
    </joint>

    <link name="left_wheel">
        <visual>
            <geometry>
                <cylinder radius="${wheel_link_radius}" length="${wheel_link_length}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${wheel_link_radius}" length="${wheel_link_length}"/>
            </geometry>
        </collision>

        <xacro:inertia_wheel />
    </link>

    <gazebo reference="left_wheel">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Black</material>
    </gazebo>

    <!-- RIGHT WHEEL LINK -->

    <joint name="right_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel"/>
        <origin xyz="0 ${-main_body_y_dim/2-wheel_link_length/2} ${wheel_link_z_location}" rpy="${pi_const/2} 0 0" />
        <axis xyz="0 0 -1"/>
        <limit effort="1000" velocity="1000" />
        <dynamics damping="1.0" friction="1.0"/>
    </joint>

    <link name="right_wheel">
        <visual>
            <geometry>
                <cylinder radius="${wheel_link_radius}" length="${wheel_link_length}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${wheel_link_radius}" length="${wheel_link_length}"/>
            </geometry>
        </collision>

        <xacro:inertia_wheel />
    </link>

    <gazebo reference="right_wheel">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Black</material>
    </gazebo>

    <!-- CASTER WHEEL LINK -->

    <joint name="caster_wheel_joint" type="fixed">
        <parent link="wheel_mount"/>
        <child link="caster_wheel"/>
        <origin xyz="${front_wheel_link_x_location} 0 ${(main_body_z_dim-front_wheel_mount_z_dim)-front_wheel_link_radius}"/>
    </joint>


    <link name="caster_wheel">
        <visual>
            <geometry>
                <sphere radius="${front_wheel_link_radius}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${front_wheel_link_radius}"/>
            </geometry>
        </collision>
        <xacro:inertia_front_wheel />
    </link>

    <gazebo reference="caster_wheel">
    <mu1>0.001</mu1>
    <mu2>0.001</mu2>
    <material>Gazebo/Black</material>
    </gazebo>

</robot>
