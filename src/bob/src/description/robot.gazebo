<?xml version="1.0"?>

<robot>

    <gazebo reference="chassis">
        <material>Gazebo/White</material>
        </gazebo>
        
        <gazebo reference="wheel_mount">
        <material>Gazebo/White</material>
        </gazebo>
        
        <gazebo reference="camera_mount">
            <material>Gazebo/White</material>
        </gazebo>
        
        <gazebo reference="emergency_mount">
            <material>Gazebo/Black</material>
        </gazebo>
        
        <gazebo reference="emergency_button">
            <material>Gazebo/Red</material>
        </gazebo>
        
        <gazebo reference="left_wheel">
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <material>Gazebo/Black</material>
        </gazebo>
        
        <gazebo reference="right_wheel">
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <material>Gazebo/Black</material>
        </gazebo>
        
        <gazebo reference="caster_wheel">
        <mu1>0.001</mu1>
        <mu2>0.001</mu2>
        <material>Gazebo/Black</material>
        </gazebo>


    <gazebo>
        <plugin name="diff_drive" filename="libgazebo_ros_diff_drive.so">

            <!-- Wheel Information -->
            <left_joint>left_wheel_joint</left_joint>
            <right_joint>right_wheel_joint</right_joint>
            <wheel_separation>${main_body_y_dim+wheel_link_length}</wheel_separation>
            <wheel_diameter>${2*wheel_link_radius}</wheel_diameter>


            <!-- Limits -->
            <max_wheel_torque>200</max_wheel_torque>
            <max_wheel_acceleration>10.0</max_wheel_acceleration>

            
            <!-- Output -->
            <odometry_frame>odom</odometry_frame>
            <robot_base_frame>base_link</robot_base_frame>

            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>
            <publish_wheel_tf>true</publish_wheel_tf>

            <publishWheelJointState>true</publishWheelJointState>
            <command_topic>cmd_vel</command_topic>
            <odometry_topic>odom</odometry_topic>

        </plugin>
    </gazebo>

    <gazebo reference="lidar_frame">
        <material>Gazebo/Red</material>

        <sensor name="laser" type="ray">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>false</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <min_angle>-3.14</min_angle>
                        <max_angle>3.14</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.3</min>
                    <max>12</max>
                </range>
            </ray>
            <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <argument>~/out:=scan</argument>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>lidar_frame</frame_name>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="camera_frame">

        <material>Gazebo/Black</material>

        <sensor name="camera" type="camera">
            <pose> camera_radius 0 0 0 0 0 </pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <camera>
                <horizontal_fov>1.089</horizontal_fov>
                <image>
                    <format>R8G8B8</format>
                    <width>640</width>
                    <height>480</height>
                </image>
                <clip>
                    <near>0.05</near>
                    <far>8.0</far>
                </clip>
            </camera>

            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <frame_name>camera_optical_frame</frame_name>
            </plugin>
        </sensor>

    </gazebo>

    <gazebo reference="acc_frame">

        <material>Gazebo/Blue</material>
        <gravity>true</gravity>

        <sensor name="acc" type="imu">
            <pose> 0 0 0 0 0 0 </pose>
            <always_on>1</always_on>
            <visualize>true</visualize>
            <update_rate>100</update_rate>

            <plugin name="imu_controller" filename="libgazebo_ros_imu_sensor.so">
                <topicName>imu</topicName>
                <frameName>acc_frame</frameName>
                <updateRateHZ>10.0</updateRateHZ>
                <gaussianNoise>0.0</gaussianNoise>
                <xyzOffset>0 0 0</xyzOffset>
                <rpyOffset>0 0 0</rpyOffset>
                <initialOrientationAsReference>false</initialOrientationAsReference>
            </plugin>

        </sensor>

    </gazebo>



</robot>